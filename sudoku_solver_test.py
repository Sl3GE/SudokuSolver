import sudoku_solver as ss
from SudokuFactory import SudokuFactory
from time import time

def solver_efficiency_comparison_test(rounds: int = 1, boardDifficulty: int = 5):
    '''
    Compares the efficiency of "sudoku_solver.sudokuBacktrackSolver"
    and "sudoku_solver.sudokuBacktrackLocalizedSolver" by running
    each solver over and over on a paramatized amount of rounds
    on a new board generated by "SudokuFactory".
    '''
    factory = SudokuFactory(boardDifficulty)
    board = factory.createSudoku()
    # Test "sudoku_solver.sudokuBacktrackSolver"
    start = time()
    for i in range(rounds):
        ss.sudokuBacktrackSolver([board], 0)
    lengthOfTime = time() - start
    print("Normal Solver Time: "+str(lengthOfTime))
    # Test "sudoku_solver.sudokuBacktrackLocalizedSolver"
    start = time()
    for i in range(rounds):
        ss.sudokuBacktrackLocalizedSolver([board], 0)
    lengthOfTime = time() - start
    print("Localized Solver Time: "+str(lengthOfTime))


if __name__ == "__main__":
    solver_efficiency_comparison_test(10,6)